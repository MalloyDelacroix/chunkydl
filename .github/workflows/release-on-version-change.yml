name: Release on Version Change

on:
    push:
        paths:
            - "pyproject.toml"

jobs:
    release:
        runs-on: ubuntu-latest

        steps:
            -   name: Check out the code
                uses: actions/checkout@v3

            -   name: Set up Python
                uses: actions/setup-python@v4
                with:
                    python-version: '3.x'

            -   name: Install dependencies
                run: |
                    python -m pip install --upgrade pip
                    pip install toml

            -   name: Extract version from pyproject.toml
                id: extract_version
                run: |
                    VERSION=$(python -c "import toml; print(toml.load('pyproject.toml')['tool']['poetry']['version'])")
                    echo "VERSION=$VERSION" >> $GITHUB_ENV
                shell: bash

            -   name: Read CHANGELOG.md
                id: read_changelog
                run: |
                    CHANGELOG=$(cat CHANGELOG.md)
                    echo "CHANGELOG<<EOF" >> $GITHUB_ENV
                    echo "$CHANGELOG" >> $GITHUB_ENV
                    echo "EOF" >> $GITHUB_ENV
                shell: bash

            -   name: Create GitHub Release
                id: create_release
                uses: actions/create-release@v1
                env:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                with:
                    tag_name: "v${{ env.VERSION }}"
                    release_name: "v${{ env.VERSION }}"
                    draft: false
                    prerelease: false
                    body: |
                        ## Changes
                        ${{ env.CHANGELOG }}

            -   name: Upload release assets (optional)
                uses: actions/upload-release-asset@v1
                with:
                    upload_url: ${{ steps.create_release.outputs.upload_url }}
                    asset_path: ./dist/your-package-${{ env.VERSION }}.tar.gz
                    asset_name: your-package-${{ env.VERSION }}.tar.gz
                    asset_content_type: application/gzip
